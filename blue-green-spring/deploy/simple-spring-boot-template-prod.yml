apiVersion: v1
kind: Template
labels:
  template: openjdk-deployment
metadata:
  annotations:
    description: Application template for spring boot  built using a Jenkins Pipeline
    iconClass: icon-java
    tags: openjdk8,java,xpaas
    version: 1.2.0
  name: openjdk8-deployment
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-green
    namespace: ${NAMESPACE}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${APPLICATION_NAME}-green
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-blue
    namespace: ${NAMESPACE}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${APPLICATION_NAME}-blue
- apiVersion: v1
  id: ${APPLICATION_NAME}-http
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${NAMESPACE}
  spec:
    host: ${HOSTNAME_HTTP}
    to:
      name: ${APPLICATION_NAME}-blue
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-green
    namespace: ${NAMESPACE}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-green
    namespace: ${NAMESPACE}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-blue
    namespace: ${NAMESPACE}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}-blue
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}-blue
        name: ${APPLICATION_NAME}-blue
      spec:
        containers:
        - env:
            - name: MY_DEPLOYMENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: ${APPLICATION_NAME}-blue
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}-blue
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - curl -s 'http://localhost:8080/' |grep -iq 'Openshift'
        terminationGracePeriodSeconds: 60
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}-blue
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}-blue:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-green
    namespace: ${NAMESPACE}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}-green
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}-green
        name: ${APPLICATION_NAME}-green
      spec:
        containers:
        - env:
            - name: MY_DEPLOYMENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: ${APPLICATION_NAME}-green
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}-green
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - curl -s 'http://localhost:8080/' |grep -iq 'Openshift'
        terminationGracePeriodSeconds: 60
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}-green
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}-green:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    labels:
      template: simple-spring-boot-template
    name: jenkins_edit
    namespace: ${NAMESPACE}
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: ${SA_NAME}
    namespace: ${SA_NAMESPACE}
  userNames:
  - system:serviceaccount:${SA_NAMESPACE}:${SA_NAME}
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: openjdk8-app
- description: The namespace to deploy into
  name: NAMESPACE
  required: true
- descriptiondd: Name of a service account that can deploy to this project
  name: SA_NAME
  required: true
  value: jenkins
- description: Namespace of service account that can deploy to this project
  name: SA_NAMESPACE
  required: true
- description: 'Custom hostname for http service route.  Leave blank for default hostname,
    e.g.: <application-name>-<project>.<default-domain-suffix>'
  name: HOSTNAME_HTTP
